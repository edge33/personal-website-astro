---
import type { NotionPage } from '../../notion';
import './search.css';

interface Props {
    searchItems: NotionPage[];
}

const { searchItems } = Astro.props;
---

<div class="search-container">
    <div class="search-section">
        <i class="icon-search"></i>
        <input
            type="text"
            name="search"
            id="searchbar"
            autocomplete="off"
            aria-label="search in posts"
        />
    </div>
    <div
        class="search-results"
        id="search-results"
        data-placeholder="No Results"
        style="display: none;"
    >
    </div>
</div>

<script is:inline define:vars={{ searchItems }}>
    (async () => {
        const $searchbar = document.getElementById('searchbar');
        const $searchResults = document.getElementById('search-results');

        if (!$searchbar || !$searchResults) {
            return;
        }

        $searchbar.addEventListener('input', (event) => {
            const searchValue = event.target.value.toLowerCase();
            $searchResults.innerHTML = '';
            const results = searchItems.filter((pageProp) => {
                const { title, slug, date, categories, excerpt } = pageProp;

                if (title.toLowerCase().includes(searchValue)) {
                    return true;
                }

                if (slug.toLowerCase().includes(searchValue)) {
                    return true;
                }

                if (date.includes(searchValue)) {
                    return true;
                }

                if (categories.some((c) => c.includes(searchValue))) {
                    return true;
                }

                if (excerpt.toLowerCase().includes(searchValue)) {
                    return true;
                }
            });

            for (const result of results) {
                $searchResults.insertAdjacentHTML(
                    'beforeend',
                    `<a href="/posts/${result.id}" target="_blank">${result.title}</a>`
                );
            }
        });

        /* hack ios safari unfocus */
        if (
            /Safari/.test(navigator.userAgent) &&
            !/Chrome/.test(navigator.userAgent)
        ) {
            document.body.firstElementChild.tabIndex = 1;
        }

        const $labelGroup = document.querySelector('.posts-labelgroup');
        const $postLabel = document.getElementById('posts-label');
        const labelWidth = $postLabel.scrollWidth;

        $postLabel.style.width = labelWidth + 'px';

        $labelGroup.addEventListener(
            'click',
            (e) => {
                $searchResults.style.display = null;
                $postLabel.style.width = '0';
                $labelGroup.setAttribute(
                    'class',
                    'posts-labelgroup focus-within'
                );
                $searchbar.focus();
                e.stopPropagation();
            },
            false
        );

        $labelGroup.addEventListener('mouseleave', () => {
            document.body.onclick = searchCollapse;
        });

        const searchCollapse = () => {
            $searchResults.style.display = 'none';
            $labelGroup.setAttribute('class', 'posts-labelgroup');
            $postLabel.style.width = labelWidth + 'px';
            document.body.onclick = null;
        };
    })();
</script>
